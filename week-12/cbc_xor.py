import math 

intermediate = {
  'l0': [27, 168, 233, 59, 184, 236, 197, 137, 117, 178, 197, 208, 251, 120, 23, 17],
  'l1': [145, 249, 105, 237, 160, 83, 236, 0, 175, 168, 202, 159, 165, 211, 212, 74],
  'l2': [113, 129, 106, 155, 208, 212, 5, 231, 117, 33, 25, 50, 22, 192, 108, 178],
  'l3': [164, 30, 137, 9, 183, 188, 47, 230, 14, 155, 13, 48, 217, 239, 168, 21],
  'l4': [104, 160, 235, 27, 173, 219, 208, 62, 164, 77, 216, 19, 85, 36, 221, 130],
  'l5': [176, 66, 126, 249, 110, 2, 47, 252, 61, 54, 144, 85, 189, 31, 126, 45],
  'l6': [206, 69, 34, 163, 250, 180, 3, 136, 170, 208, 195, 232, 107, 141, 136, 35],
  'l7': [63, 211, 51, 106, 15, 33, 91, 154, 141, 84, 18, 21, 0, 145, 185, 90],
  'l8': [44, 25, 155, 184, 82, 216, 213, 47, 233, 214, 47, 206, 119, 187, 218, 18],
  'l9': [0, 60, 193, 47, 8, 205, 41, 55, 141, 69, 48, 59, 49, 242, 31, 54],
  'l10': [44, 106, 6, 42, 234, 187, 224, 187, 69, 133, 57, 63, 63, 229, 251, 133],
  'l11': [61, 4, 202, 178, 99, 69, 44, 79, 184, 70, 102, 31, 213, 232, 95, 176],
  'l12': [40, 114, 72, 152, 128, 111, 243, 177, 202, 137, 46, 38, 87, 118, 135, 187],
  'l13': [246, 227, 194, 112, 213, 61, 108, 135, 185, 236, 217, 121, 40, 166, 25, 236],
  'l14': [104, 37, 221, 157, 195, 21, 67, 242, 127, 123, 189, 51, 188, 207, 185, 141],
  'l15': [23, 236, 127, 84, 118, 101, 163, 171, 92, 169, 205, 96, 22, 111, 235, 249],
  'l16': [230, 24, 215, 213, 90, 38, 120, 49, 46, 166, 177, 244, 104, 237, 17, 122],
  'l17': [203, 60, 149, 178, 255, 86, 146, 162, 83, 19, 106, 140, 235, 24, 201, 109],
  'l18': [89, 225, 169, 44, 67, 164, 168, 54, 16, 129, 97, 199, 142, 151, 136, 81],
  'l19': [236, 212, 136, 123, 249, 177, 106, 142, 248, 231, 31, 122, 89, 21, 30, 246],
  'l20': [172, 179, 108, 241, 83, 52, 207, 229, 204, 230, 228, 155, 126, 197, 47, 31],
  'l21': [153, 52, 65, 13, 53, 39, 119, 18, 55, 170, 148, 175, 29, 183, 134, 107],
  'l22': [165, 252, 52, 175, 236, 40, 135, 179, 126, 84, 133, 132, 46, 175, 230, 231],
  'l23': [235, 178, 149, 98, 45, 72, 223, 112, 8, 86, 18, 149, 179, 119, 107, 186],
  'l24': [13, 20, 88, 53, 185, 199, 70, 201, 16, 187, 20, 163, 104, 24, 202, 252],
  'l25': [16, 136, 18, 87, 134, 240, 164, 217, 42, 94, 176, 38, 44, 169, 194, 146],
  'l26': [76, 72, 112, 67, 201, 63, 203, 161, 156, 105, 89, 94, 154, 204, 222, 57],
  'l27': [95, 135, 156, 1, 108, 124, 48, 40, 223, 153, 39, 165, 52, 220, 83, 242],
  'l28': [141, 171, 98, 84, 42, 235, 4, 246, 58, 29, 164, 174, 85, 84, 196, 52],
  'l29': [27, 245, 61, 59, 137, 172, 160, 205, 21, 231, 13, 68, 27, 8, 0, 140],
  'l30': [164, 29, 99, 173, 195, 117, 122, 159, 78, 91, 76, 16, 217, 38, 55, 225],
  'l31': [130, 14, 244, 54, 97, 212, 167, 99, 160, 210, 233, 235, 100, 192, 0, 187],
  'l32': [144, 73, 233, 189, 101, 197, 18, 105, 95, 240, 69, 48, 14, 9, 92, 208],
  'l33': [165, 192, 105, 8, 103, 182, 155, 176, 97, 234, 127, 114, 88, 72, 213, 162],
  'l34': [205, 64, 88, 130, 242, 67, 232, 219, 19, 79, 147, 205, 233, 6, 139, 246],
  'l35': [191, 79, 198, 20, 84, 32, 189, 175, 151, 4, 22, 9, 253, 121, 115, 5],
  'l36': [126, 120, 196, 120, 245, 73, 0, 198, 3, 124, 158, 129, 157, 39, 144, 93],
  'l37': [41, 206, 134, 96, 119, 245, 60, 227, 127, 170, 87, 39, 60, 103, 44, 126],
  'l38': [160, 215, 172, 142, 71, 94, 154, 17, 177, 241, 172, 204, 19, 29, 67, 227],
  'l39': [5, 17, 89, 58, 62, 20, 158, 138, 115, 50, 102, 33, 248, 202, 6, 61],
  'l40': [44, 184, 157, 10, 233, 172, 227, 138, 92, 108, 15, 170, 212, 131, 171, 152],
  'l41': [43, 36, 224, 147, 227, 115, 45, 33, 247, 28, 215, 119, 95, 165, 192, 0],
  'l42': [25, 232, 0, 237, 220, 248, 240, 197, 67, 186, 94, 56, 238, 22, 119, 211],
  'l43': [138, 164, 72, 177, 133, 86, 52, 79, 251, 66, 216, 125, 31, 81, 161, 27],
  'l44': [69, 84, 32, 196, 0, 133, 192, 21, 116, 71, 232, 217, 12, 251, 215, 233],
  'l45': [58, 119, 44, 22, 230, 241, 44, 157, 242, 193, 71, 245, 2, 175, 69, 42],
  'l46': [113, 76, 28, 224, 222, 105, 33, 153, 46, 186, 97, 32, 212, 228, 157, 14],
  'l47': [121, 53, 99, 150, 22, 33, 32, 121, 239, 242, 44, 168, 149, 190, 250, 40],
  'l48': [119, 107, 113, 109, 52, 182, 28, 78, 68, 226, 127, 108, 51, 140, 40, 96],
  'l49': [43, 187, 156, 60, 6, 237, 188, 173, 129, 150, 28, 211, 189, 69, 246, 57],
  'l50': [9, 108, 103, 197, 145, 138, 179, 119, 99, 50, 217, 175, 15, 7, 185, 57],
  'l51': [37, 136, 101, 194, 125, 176, 32, 28, 224, 221, 195, 132, 247, 255, 222, 186],
  'l52': [99, 133, 80, 206, 86, 112, 5, 91, 200, 74, 244, 62, 156, 233, 161, 45],
  'l53': [25, 246, 58, 91, 166, 80, 77, 61, 155, 245, 87, 236, 237, 11, 223, 24],
  'l54': [67, 50, 67, 163, 55, 84, 182, 40, 129, 218, 254, 99, 77, 90, 78, 57],
  'l55': [230, 134, 216, 40, 199, 239, 187, 205, 233, 168, 246, 99, 251, 12, 39, 144],
  'l56': [46, 119, 228, 225, 89, 255, 155, 96, 156, 72, 210, 121, 238, 93, 108, 129],
  'l57': [18, 243, 167, 245, 32, 190, 211, 34, 164, 142, 181, 64, 67, 110, 124, 148]
}

def read_input(filename):
  with open(filename) as file:
    data = file.read()
  iv = data[data.index("IV: ")+4:data.index("Ciphertext: ")-1]
  ct = data[data.index("Ciphertext: ")+12:-1]
  return (iv, ct)

def hex_to_hex_list(m):
  output=[]
  for i in range(len(m)//2):
    output.append(int("0x"+m[2*i:2*i+2], 16))
  return output

bytes_per_block = 16
iv, ct = read_input("cbc.txt")

iv_list = hex_to_hex_list(iv)

num_lists = math.ceil(len(ct)/2/bytes_per_block)
dict_of_sublists = {}
for i in range(0, num_lists):
  dict_of_sublists['l'+str(i)] = hex_to_hex_list(ct[bytes_per_block*2*i:bytes_per_block*2*i+bytes_per_block*2])

for key in intermediate:
  string = ''
  for i in range(16):
    if ((int(key[1:])-1)<0):
      string = string + chr(iv_list[i]^intermediate[key][i])
    else:
      string = string + chr(dict_of_sublists["l"+str(int(key[1:])-1)][i]^intermediate[key][i])
  print(string)











 
